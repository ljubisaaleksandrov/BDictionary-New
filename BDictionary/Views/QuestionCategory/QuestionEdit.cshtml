@using BDictionary.UI.Models.Categories
@model IQuestionViewModelContainer

<div class="form-horizontal ">
    <h4>Category Questions</h4>

    <div class="form-group">
        <div class="col-md-12">
            <div class="col-md-9">
                @Html.Editor("New Question", "", null, new { htmlAttributes = new { @id = "NewQuestion", @class = "form-control form-control-long left" } })
            </div>
            <div class="col-md-2">
                @{
                    var answerSelectItems = new SelectList(Model.QuestionHelperViewModel.Answers, selectedValue: Model.QuestionHelperViewModel.SelectedAnswer);
                    @Html.DropDownList("SelectedAnswer", answerSelectItems, new { @id = "SelectedAnswer", @name = "Answers", @class = "form-control" });
                }
            </div>
            <div class="col-md-1">
                <a href="#" onclick="qc.SelectQuestionType()" class="question-type"><img src="~/Content/Images/crazy-white-black.jpg" id="QuestionType" /></a>
                @Html.HiddenFor(model => model.QuestionHelperViewModel.IsShiz)
                <button id="AddQuestion" class="btn btn-info right" onclick="qc.AddQuestion(event)"><span class="glyphicon glyphicon-plus"></span></button>
            </div>
        </div>
    </div>
    <div class="margin-default"></div>

    <div class="category-questions">
        @for (int i = 0; i < Model.QuestionViewModel.Count; i++)
        {
            var question = Model.QuestionViewModel[i];
            <div class="form-group">
                <div class="col-md-12">
                    <div class="col-md-9">
                        @Html.EditorFor(model => question.Value, new { htmlAttributes = new { @class = "form-control form-control-long left", @disabled = "disabled", title = question.Value } })
                    </div>
                    <div class="col-md-2">
                        @Html.EditorFor(model => question.Answer, new { htmlAttributes = new { @class = "form-control form-control-long left", @disabled = "disabled" } })
                    </div>
                    <div class="col-md-1">
                        @if (question.IsShiz)
                        {
                            <a href="#" class="question-type"><img src="~/Content/Images/crazy-colour.jpg" id="TextAnswerType" /></a>
                        }
                        else
                        {
                            <a href="#" class="question-type"><img src="~/Content/Images/crazy-white-black.jpg" id="TextAnswerType" /></a>
                        }
                        <button id="RemoveQuestion" class="btn btn-danger right" onclick="qc.RemoveQuestion(event, '@question.Value')"><span class="glyphicon glyphicon-trash"></span></button>
                    </div>

                    @Html.HiddenFor(model => Model.QuestionViewModel[i].Id)
                    @Html.HiddenFor(model => Model.QuestionViewModel[i].CategoryID)
                    @Html.HiddenFor(model => Model.QuestionViewModel[i].Value)
                    @Html.HiddenFor(model => Model.QuestionViewModel[i].Answer)
                    @Html.HiddenFor(model => Model.QuestionViewModel[i].Creator)
                    @Html.HiddenFor(model => Model.QuestionViewModel[i].IsShiz)
                </div>
            </div>
        }
    </div>
</div>
